# Generated by Django 3.1.7 on 2021-06-04 23:25

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Api',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, db_index=True, verbose_name='修改时间')),
                ('name', models.CharField(max_length=100, verbose_name='名称')),
                ('method', models.CharField(blank=True, choices=[('GET', 'GET'), ('POST', 'POST')], default='GET', max_length=5, verbose_name='方法')),
                ('protocol', models.CharField(blank=True, choices=[('HTTP', 'HTTP'), ('HTTPS', 'HTTPS')], default='HTTP', max_length=5, verbose_name='协议')),
                ('path', models.CharField(blank=True, db_index=True, default='/', help_text='必须以/开头', max_length=300, verbose_name='api路径')),
                ('timeout', models.IntegerField(blank=True, default=1000, verbose_name='超时时间(ms)')),
                ('involve', models.TextField(blank=True, default='', verbose_name='入参')),
                ('existence', models.TextField(blank=True, default='', verbose_name='出参')),
            ],
            options={
                'verbose_name': '接口',
                'db_table': 'gateway_api',
                'ordering': ['-id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Gateway',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, db_index=True, verbose_name='修改时间')),
                ('name', models.CharField(max_length=100, verbose_name='名称')),
            ],
            options={
                'verbose_name': '网关',
                'db_table': 'gateway_gateway',
                'ordering': ['-id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, db_index=True, verbose_name='修改时间')),
                ('name', models.CharField(max_length=100, verbose_name='名称')),
                ('s_type', models.CharField(blank=True, default='HTTP', max_length=10, verbose_name='服务类型')),
                ('instances', models.CharField(blank=True, default='', max_length=400, verbose_name='实例列表')),
                ('load_balance_type', models.IntegerField(blank=True, choices=[(1, '轮询'), (2, '随机')], default=1, verbose_name='负载均衡')),
            ],
            options={
                'verbose_name': '服务',
                'db_table': 'gateway_server',
                'ordering': ['-id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Step',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, db_index=True, verbose_name='修改时间')),
                ('name', models.CharField(max_length=100, verbose_name='名称')),
            ],
            options={
                'verbose_name': '步骤',
                'db_table': 'gateway_step',
                'ordering': ['-id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StepApi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('involve', models.TextField(blank=True, default='', verbose_name='入参')),
                ('existence', models.TextField(blank=True, default='', verbose_name='出参')),
                ('api', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='apis', to='gateway.api')),
                ('step', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='gateway.step')),
            ],
            options={
                'verbose_name': '步骤接口表',
                'db_table': 'gateway_step_api',
                'ordering': ['-id'],
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='step',
            name='api',
            field=models.ManyToManyField(through='gateway.StepApi', to='gateway.Api'),
        ),
        migrations.CreateModel(
            name='Arrangement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, db_index=True, verbose_name='修改时间')),
                ('name', models.CharField(max_length=100, verbose_name='名称')),
                ('method', models.CharField(blank=True, choices=[('GET', 'GET'), ('POST', 'POST')], default='GET', max_length=5, verbose_name='方法')),
                ('path', models.CharField(blank=True, db_index=True, default='/', max_length=300, verbose_name='api路径')),
                ('desc', models.CharField(blank=True, default='', max_length=400, verbose_name='描述')),
                ('step', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arrangement_step', to='gateway.step', verbose_name='步骤')),
            ],
            options={
                'verbose_name': '编排',
                'db_table': 'gateway_arrangement',
                'ordering': ['-id'],
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='api',
            name='server',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='api_server', to='gateway.server', verbose_name='服务'),
        ),
        migrations.CreateModel(
            name='Router',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, db_index=True, verbose_name='修改时间')),
                ('name', models.CharField(max_length=100, verbose_name='名称')),
                ('method', models.CharField(blank=True, choices=[('GET', 'GET'), ('POST', 'POST')], default='GET', max_length=5, verbose_name='方法')),
                ('path', models.CharField(blank=True, db_index=True, default='/', max_length=300, verbose_name='api路径')),
                ('api', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='router_api', to='gateway.api', verbose_name='接口')),
                ('gateway', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='router_gateway', to='gateway.gateway', verbose_name='网关')),
                ('step', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='router_step', to='gateway.step', verbose_name='步骤')),
            ],
            options={
                'verbose_name': '路由',
                'db_table': 'gateway_router',
                'ordering': ['-id'],
                'managed': True,
                'unique_together': {('path', 'gateway')},
            },
        ),
    ]
